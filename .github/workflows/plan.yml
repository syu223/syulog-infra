on:
  push:
    branches:
      - "feature/**"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  inspect-token:
    runs-on: ubuntu-latest

    steps:
      - name: Request OIDC token
        id: request-oidc-token
        uses: actions/github-script@v6
        with:
          script: |
            const token = await core.getIDToken();
            core.setOutput("id_token", token)

      - name: Decode OIDC token sub
        run: |
          echo "Decoding OIDC token..."
          echo "${{ steps.request-oidc-token.outputs.id_token }}" \
            | cut -d '.' -f2 \
            | base64 -d \
            | jq '.sub'

  terraform-plan:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write
      statuses: write
      issues: write

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: ⤵Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Format Check (with diff)
        run: |
          terraform fmt -check -recursive || true

          TMPDIR=$(mktemp -d)
          cp -r . "$TMPDIR"
          cd "$TMPDIR"
          terraform fmt -recursive

          diff_output=$(diff -u --exclude='.terraform' --exclude='.git' -r . "$GITHUB_WORKSPACE" || true)
          if [ -n "$diff_output" ]; then
            echo "Terraform format issues detected:"
            echo "$diff_output"
            exit 1
          fi

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest

      - name: TFLint run
        run: |
          tflint --init
          tflint

      - name: Terraform Init
        run: terraform init -upgrade -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}
          aws-region: ap-northeast-1

      - name: Terraform Plan (JSON + Markdown)
        id: extract_plan_structured
        run: |
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json

          echo "Terraform plan に差分が検出されました。以下は変更内容の詳細です。" > pr_body.txt

          # destroy 判定（任意）
          if terraform show -json tfplan | jq '.resource_changes[].change.actions' | grep -q destroy; then
            echo "⚠️ Destroy 操作が含まれています。影響に注意してください。" >> pr_body.txt
          fi

          jq -r '
            .resource_changes[]
            | select(.change.actions != ["no-op"])
            | . as $res
            | $res.change.before as $before
            | $res.change.after as $after
            | $before
            | keys_unsorted[]
            | select($before[.] != $after[.])
            | "### \($res.address)\n"
            + "- Actions: `\($res.change.actions | join(", "))`\n"
            + "- Changed Key: `\(.)`\n"
            + "- Before: `\($before[.] | tostring)`\n"
            + "- After: `\($after[.] | tostring)`\n"
          ' tfplan.json >> pr_body.txt

      - name: Create PR with structured diff
        if: success()
        run: |
          gh pr create \
            --title "Terraform plan に基づく差分更新" \
            --body "$(cat pr_body.txt)" \
            --head "${{ github.ref_name != '' && github.ref_name || github.head_ref }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

