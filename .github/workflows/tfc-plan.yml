on:
  push:
    branches:
      - 'feature/**'
  pull_request:

jobs:
  terraform-plan:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      statuses: write
    runs-on: ubuntu-latest

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }} 

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest  # or specify version like "0.50.3"

      - name: Terraform Format Check (with diff)
        run: |
          set -e
          # フォーマットに違反しているファイルをチェック（exit code 3で失敗）
          terraform fmt -check -recursive || true

          # フォーマットを適用した状態を一時ディレクトリにコピー
          TMPDIR=$(mktemp -d)
          cp -r . $TMPDIR
          cd $TMPDIR
          terraform fmt -recursive

          # 差分を比較して表示（元のリポジトリと整形済みで違う部分を表示）
          diff_output=$(diff -u --exclude='.terraform' --exclude='.git' -r . $GITHUB_WORKSPACE || true)
          if [ -n "$diff_output" ]; then
            echo "Terraform format issues detected:"
            echo "$diff_output"
            exit 1
          fi


      - name: terraform init
        run: terraform init -no-color 

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: TFLint
        run: |
          tflint --init
          tflint

      - name: Terraform Plan
        run: terraform plan -no-color | tee plan.out

      - name: Comment plan result to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: plan.out

